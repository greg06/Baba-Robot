package com.baba;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.net.URI;
 
import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.HttpClient;
import org.apache.http.client.methods.HttpGet;
import org.apache.http.impl.client.DefaultHttpClient;
 
import android.app.Activity;
import android.os.Bundle;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.webkit.WebView;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;
 
public class baba extends Activity {
 
    private static final String LOG_TAG = "Log : ";
    private final String mimeType = "text/html";
    private final String encoding = "utf-8";
    private String url;
    private String pageWeb;
    private WebView webView;
    private EditText editText;
    private  Button button;
 
	/** Called when the activity is first created. */
    @Override
    public void onCreate(Bundle savedInstanceState) {
        super.onCreate(savedInstanceState);
        setContentView(R.layout.main);
 
        //On récupère l'EditText, le WebView, et le Button grâce au ID
        editText = (EditText) findViewById(R.id.EditText);
        webView = (WebView) findViewById(R.id.WebView);
        button = (Button) findViewById(R.id.Button);
 
        //On affecte un évènement au bouton
        button.setOnClickListener(
        	new OnClickListener() {
			@Override
			public void onClick(View v) {
				//on récupère l'url présente dans l'EditText
				url = editText.getText().toString();
 
				try {
					//on récupère le code HTML associé à l'URL que l'on a indiqué dans l'EditText
			        	pageWeb = baba.getPage(url);
			        	// ((TextView)findViewById(R.id.TextView)).setText( url );
			        	
			        	//on charge les données récupérées dans le WebView
			        	webView.loadData(pageWeb, mimeType, encoding);
				} catch (ClientProtocolException e) {
					e.printStackTrace();
				} catch (IOException e) {
					e.printStackTrace();
				}
			}
		}
        );
 
    }
 
    public static String getPage(String url) throws ClientProtocolException, IOException{
    	StringBuffer stringBuffer = new StringBuffer("");
    	BufferedReader bufferedReader = null;
 
    	try{
    		//Création d'un DefaultHttpClient et un HttpGet permettant d'effectuer une requête HTTP de type GET
    		HttpClient httpClient = new DefaultHttpClient();
    		HttpGet httpGet = new HttpGet();
 
    		//Création de l'URI et on l'affecte au HttpGet
    		URI uri = new URI(url);
    		httpGet.setURI(uri);
 
    		//Execution du client HTTP avec le HttpGet
    		HttpResponse httpResponse = httpClient.execute(httpGet);
 
    		//On récupère la réponse dans un InputStream
    		InputStream inputStream = httpResponse.getEntity().getContent();
 
    		//On crée un bufferedReader pour pouvoir stocker le résultat dans un string
    		bufferedReader = new BufferedReader(new InputStreamReader(inputStream));
 
    		//On lit ligne à ligne le bufferedReader pour le stocker dans le stringBuffer
    		String ligneCodeHTML = bufferedReader.readLine();
    		while (ligneCodeHTML != null){
    			stringBuffer.append(ligneCodeHTML);
    			stringBuffer.append("\n");
    			ligneCodeHTML = bufferedReader.readLine();
    		}
 
    	}catch (Exception e){
    		Log.e(LOG_TAG, e.getMessage());
    	}finally{
    		//Dans tous les cas on ferme le bufferedReader s'il n'est pas null
    		if (bufferedReader != null){
    			try{
    				bufferedReader.close();
    			}catch(IOException e){
    	    		Log.e(LOG_TAG, e.getMessage());
    			}
    		}
    	}
 
    	//On retourne le stringBuffer
    	return stringBuffer.toString();
    }
}